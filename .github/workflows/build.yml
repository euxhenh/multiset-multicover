# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test and Upload multiset_multicover

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_linux:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        wheel_arch: [x86_64, i686]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Build wheels
      uses: joerick/cibuildwheel@main
      env:
        CIBW_BUILD: "*-manylinux_${{ matrix.wheel_arch }}"

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_other:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macOS-10.15]
        wheel_arch: [x86_64, i686]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Build wheels
      uses: joerick/cibuildwheel@main

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build

      - name: Build
        run: |
          python -m build
          python setup.py install

      - name: Test
        run: |
          python -m unittest -v test/test_interface.py

      - uses: actions/upload-artifact@v2
        with:
          path: ./build/*.tar.gz

  upload_pypi:
    name: Upload to pypi
    needs: [build_wheels]
    runs-on: ubuntu-20.04

    if: github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish package to PyPi
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

